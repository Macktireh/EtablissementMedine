name: CI

on:
  push:
    branches: ["develop", "main"]
  pull_request:
    branches: ["develop", "main"]

jobs:
  test:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        python-version: [3.10.11, 3.11]
        poetry-version: [1.4.2]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Export environment variables
        run: export ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
      - name: Run tests
        run: poetry run pytest

  code-quality:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        python-version: [3.10.11, 3.11]
        poetry-version: [1.4.2]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Run black
        run: poetry run black . --check
      - name: Run isort
        run: poetry run isort . --check-only --profile black
      - name: Run flake8
        run: poetry run flake8 .
